{"title":"B站2019秋招编程题","date":"2019-10-23T12:21:53.000Z","date_formatted":{"ll":"2019年10月23日","L":"2019/10/23","MM-DD":"10-23"},"link":"2019/10/23/2019bilibili","comments":true,"tags":["哔哩哔哩","秋招","算法"],"categories":["算法"],"updated":"2019-11-17T00:48:45.195Z","content":"<p>B站在牛客网（ <a href=\"https://www.nowcoder.com/test/16519291/summary\" target=\"_blank\">https://www.nowcoder.com/test/16519291/summary</a> ）\n上发了一套自己秋招的编程题，恰好今年被老师忽悠着去再参加一次蓝桥杯（我参加C++组，所以下面的题都是用C++做的，没用我熟悉的python），虽然那个比赛很水，但是还是要提高我的编程能力才是。于是准备做点题练习下，B站这个题挺好，题目很新颖（仅限题目描述），不过内容和那个比赛一样水，所以给大家解析下。</p>\n<h1 id=\"1扭蛋机-answer\">1.扭蛋机 <a href=\"https://www.nowcoder.com/questionTerminal/9d26441a396242a9a0f7d2106fc130c7\" target=\"_blank\">answer</a><a href=\"#1扭蛋机-answer\" title=\"1.扭蛋机 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>22娘和33娘接到了小电视君的扭蛋任务：\n一共有两台扭蛋机，编号分别为扭蛋机2号和扭蛋机3号，22娘使用扭蛋机2号，33娘使用扭蛋机3号。\n扭蛋机都不需要投币，但有一项特殊能力：\n扭蛋机2号：如果塞x（x范围为&gt;=0正整数）个扭蛋进去，然后就可以扭到2x+1个\n扭蛋机3号：如果塞x（x范围为&gt;=0正整数）个扭蛋进去，然后就可以扭到2x+2个\n22娘和33娘手中没有扭蛋，需要你帮她们设计一个方案，两人“轮流扭”（谁先开始不限，扭到的蛋可以交给对方使用），用“最少”的次数，使她们能够最后恰好扭到N个交给小电视君。</p>\n<h3 id=\"输入描述\">输入描述:<a href=\"#输入描述\" title=\"输入描述:\"></a></h3><blockquote>\n<p>输入一个正整数，表示小电视君需要的N个扭蛋。</p>\n</blockquote>\n<h3 id=\"输出描述\">输出描述:<a href=\"#输出描述\" title=\"输出描述:\"></a></h3><blockquote>\n<p>输出一个字符串，每个字符表示扭蛋机，字符只能包含&quot;2&quot;和&quot;3&quot;。</p>\n</blockquote>\n<h3 id=\"输入例子1\">输入例子1:<a href=\"#输入例子1\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>10</p>\n</blockquote>\n<h3 id=\"输出例子1\">输出例子1:<a href=\"#输出例子1\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>233</p>\n</blockquote>\n<p>思路有两种，一种是BFS，一种是通过二叉树（其实你看到2x+1和2x+2就差不多知道了），因为这个题是这样的：</p>\n<p><img src=\"https://i0.hdslb.com/bfs/article/b3688094c946e80621c9aeddea1af65114bcc717.png\" class=\"cy\"></p>\n<p>可以看到，n是奇数都是最后22扭的，n是偶数都是最后33扭的，那么我们就可以倒着找出最终的顺序。找到下一层之后返回上一层，如果是奇数就是(n-1)/2,偶数就是(n-2)/2，具体可自行验证。给出C++的示例代码：</p>\n<p><img src=\"https://i0.hdslb.com/bfs/article/3231b98c148b9c98556239e35551d0267723bad2.png\" class=\"cy\"></p>\n<h1 id=\"2脸滚键盘-answer\">2.脸滚键盘 <a href=\"https://www.nowcoder.com/questionTerminal/2a3dc06f337d4a2ba41d25c688f95e2f\" target=\"_blank\">answer</a><a href=\"#2脸滚键盘-answer\" title=\"2.脸滚键盘 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p><a href=\"https://www.bilibili.com/av394281\" target=\"_blank\">av394281</a> 中，充满威严的蕾米莉亚大小姐因为触犯某条禁忌，被隙间妖怪八云紫（紫m……èi）按住头在键盘上滚动。\n同样在弹幕里乱刷梗被紫姐姐做成罪袋的你被指派找到大小姐脸滚键盘打出的一行字中的第 <code>k</code> 个仅出现一次的字。\n(为简化问题，大小姐没有滚出 ascii 字符集以外的字)</p>\n<h3 id=\"输入描述-1\">输入描述:<a href=\"#输入描述-1\" title=\"输入描述:\"></a></h3><blockquote>\n<p>每个输入都有若干行，每行的第一个数字为<code>k</code>，表示求第<code>k</code>个仅出现一次的字。然后间隔一个半角空格，之后直到行尾的所有字符表示大小姐滚出的字符串<code>S</code>。</p>\n</blockquote>\n<h3 id=\"输出描述-1\">输出描述:<a href=\"#输出描述-1\" title=\"输出描述:\"></a></h3><blockquote>\n<p>输出的每一行对应输入的每一行的答案，如果无解，输出字符串<code>Myon~</code><br><br>(请不要输出多余的空行）<br><br>为了方便评测，如果答案存在且为c，请输出[c]</p>\n</blockquote>\n<h3 id=\"输入例子1-1\">输入例子1:<a href=\"#输入例子1-1\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>2 misakamikotodaisuki<br>3 !bakabaka~ bakabaka~ 1~2~9!<br>3 3.1415926535897932384626433832795028841971693993751o582097494459211451488946419191919l91919hmmhmmahhhhhhhhhh<br>7 <a href=\"http://www.bilibili.com/av170001\\\" target=\"_blank\">www.bilibili.com/av170001\\</a>\n1 111</p>\n</blockquote>\n<h3 id=\"输出例子1-1\">输出例子1:<a href=\"#输出例子1-1\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>[d]<br>[9]<br>[l]<br>[7]<br>Myon~</p>\n</blockquote>\n<p>这个题有几种思路，最简单的还是使用映射(map)，让出现的每个字符对应到0上。扫描整个字符串，如果碰到一个字符，就让他对应的数+1，同时记录每个字符出现的顺序。然后扫描记录的顺序，找到第k个对应数是1的字符。但是我们看到题目说的是不超过ASCII，所以直接用ASCII来映射就好了，给出示例C++代码：\n<img src=\"https://i0.hdslb.com/bfs/article/d434d8a0a72d5be696509fd514a3f559c44d1e4a.png\" class=\"cy\"></p>\n<h1 id=\"3简单表达式计算-answer\">3.简单表达式计算 <a href=\"https://www.nowcoder.com/questionTerminal/6221faa383fc49f1b10dffcb62c866bf\" target=\"_blank\">answer</a><a href=\"#3简单表达式计算-answer\" title=\"3.简单表达式计算 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>给定一个合法的表达式字符串，其中只包含非负整数、加法、减法以及乘法符号（不会有括号），例如7+3*4*5+2+4-3-1，请写程序计算该表达式的结果并输出；</p>\n<h3 id=\"输入描述-2\">输入描述:<a href=\"#输入描述-2\" title=\"输入描述:\"></a></h3><blockquote>\n<p>输入有多行，每行是一个表达式，输入以END作为结束</p>\n</blockquote>\n<h3 id=\"输出描述-2\">输出描述:<a href=\"#输出描述-2\" title=\"输出描述:\"></a></h3><blockquote>\n<p>每行表达式的计算结果</p>\n</blockquote>\n<h3 id=\"输入例子1-2\">输入例子1:<a href=\"#输入例子1-2\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>7+3*4*5+2+4-3-1<br>2-3*1<br>END</p>\n</blockquote>\n<h3 id=\"输出例子1-2\">输出例子1:<a href=\"#输出例子1-2\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>69<br>-1</p>\n</blockquote>\n<h1 id=\"4小a最多会新认识的多少人-answer\">4.小A最多会新认识的多少人 <a href=\"https://www.nowcoder.com/questionTerminal/1fe6c3136d2a45fa8ef555b459b6dd26\" target=\"_blank\">answer</a><a href=\"#4小a最多会新认识的多少人-answer\" title=\"4.小A最多会新认识的多少人 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>小A参加了一个n人的活动，每个人都有一个唯一编号<code>i</code>(<code>i&gt;=0 &amp; i&lt;n</code>)，其中<code>m</code>对相互认识，在活动中两个人可以通过互相都认识的一个人介绍认识。现在问活动结束后，小A最多会认识多少人？</p>\n<h3 id=\"输入描述-3\">输入描述:<a href=\"#输入描述-3\" title=\"输入描述:\"></a></h3><blockquote>\n<p>第一行聚会的人数：n（n&gt;=3 &amp; n&lt;10000）；<br>第二行小A的编号: ai（ai &gt;= 0 &amp; ai &lt; n)；<br>第三互相认识的数目: m（m&gt;=1 &amp; m\n&lt; n(n-1)/2）；<br>第4到m+3行为互相认识的对，以&#39;,&#39;分割的编号。</p>\n</blockquote>\n<h3 id=\"输出描述-3\">输出描述:<a href=\"#输出描述-3\" title=\"输出描述:\"></a></h3><blockquote>\n<p>输出小A最多会新认识的多少人？</p>\n</blockquote>\n<h3 id=\"输入例子1-3\">输入例子1:<a href=\"#输入例子1-3\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>7<br>5<br>6<br>1,0<br>3,1<br>4,1<br>5,3<br>6,1<br>6,5</p>\n</blockquote>\n<h3 id=\"输出例子1-3\">输出例子1:<a href=\"#输出例子1-3\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>3</p>\n</blockquote>\n<p>这个题很明显的并查集，但是据其他人说用邻接表+BFS也能做，但是这里我就不尝试了，给出并查集（最后要记得减去小A本来就认识的人）的C++示例代码：</p>\n<p><img src=\"https://i0.hdslb.com/bfs/article/c3620b6cb4835cda3b98a43a1e3cbbfc8126d40e.png\" class=\"cy\"></p>\n<h1 id=\"5山寨金闪闪-answer\">5.山寨金闪闪 <a href=\"https://www.nowcoder.com/questionTerminal/9363dcb83ca44c61a2c1a8f65aa722b8\" target=\"_blank\">answer</a><a href=\"#5山寨金闪闪-answer\" title=\"5.山寨金闪闪 answer\"></a></h1><blockquote>\n<p>时间限制：3秒<br>空间限制：262144K</p>\n</blockquote>\n<p>金闪闪死后，红A拿到了王之财宝，里面有n个武器，长度各不相同。红A发现，拿其中三件武器首尾相接，组成一个三角形，进行召唤仪式，就可以召唤出一个山寨金闪闪。（例如，三件武器长度为10、15、20，可以召唤成功。若长度为10、11、30，首尾相接无法组成三角形，召唤失败。）红A于是开了一个金闪闪专卖店。他把王之财宝排成一排，每个客人会随机抽取到一个区间[l,r],客人可以选取区间里的三件武器进行召唤（客人都很聪慧，如果能找出来合适的武器，一定不会放过）。召唤结束后，客人要把武器原样放回去。m个客人光顾以后，红A害怕过多的金闪闪愉悦太多男人，于是找到了你，希望你帮他统计出有多少山寨金闪闪被召唤出来。</p>\n<h3 id=\"输入描述-4\">输入描述:<a href=\"#输入描述-4\" title=\"输入描述:\"></a></h3><blockquote>\n<p>第一行武器数量:n &lt;= 1*10^7<br>第二行空格分隔的n个int，表示每件武器的长度。<br>第三行顾客数量：m &lt;= 1*10^6<br>后面m行，每行两个int l，r，表示每个客人被分配到的区间。（l&lt;r）</p>\n</blockquote>\n<h3 id=\"输出描述-4\">输出描述:<a href=\"#输出描述-4\" title=\"输出描述:\"></a></h3><blockquote>\n<p>山寨金闪闪数量。</p>\n</blockquote>\n<h3 id=\"输入例子1-4\">输入例子1:<a href=\"#输入例子1-4\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>5<br>1 10 100 95 101<br>4<br>1 3<br>2 4<br>2 5<br>3 5</p>\n</blockquote>\n<h3 id=\"输出例子1-4\">输出例子1:<a href=\"#输出例子1-4\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>3</p>\n</blockquote>\n<p>我知道这是《Fate》系列作品的衍生题目，我不玩游戏，但是咱也知道金闪闪是男的，为什么偷♂税男人啦。不过这个题很有说头，思路可以分为这几步：</p>\n<p>1，首先，判断三个正整数a,b,c是否能组成三角形，判断方法是：将abc升序排列，然后如果a+b&gt;c,则可以构成三角形。其次，判断一个区间[L,R]内是否能找到三个数使其构成三角形，可以将这R-L+1个元素取出并排序，然后从前往后三个三个判断。查询每次区间长度都在1~1e7之间，当然不能每次都暴力找，不然有1e6次查询，时间复杂度肯定爆炸，那么怎么处理呢？实际上，如果数一多，是非常容易构成三角形的，如果要刚好卡到边界，刚好不能构造成三角形（a+b==c），则要构造这样的数据：1，1，2，3，5，8......。\n巧了，其实就是斐波那契数列，题目的数据给出的数据在int范围内，然后我们发现大概在40多项的时候就不能构造出全都不满足构成三角形的数据了，下面是打表的出的结果。</p>\n<p><img src=\"https://i0.hdslb.com/bfs/article/b0c8293b0b7cf2342bf718d6688d72b63a629ee2.png\" class=\"cy\">\nint 的范围最大是2的32次方，也就是4294967296，到48项就超了，所以区间超过47必出金闪闪</p>\n<p>所以，只要在给出的区间长度较大的，一定能构成三角形，区间长度较小的，则可以存下来排序后判断，下面给出C++示例代码：</p>\n<p><img src=\"https://i0.hdslb.com/bfs/article/1d40fc7c91688baa999c7dc02c3de95f02acfeb6.png\" class=\"cy\"></p>\n<p>作者：高玩梁\n<a href=\"https://www.bilibili.com/read/cv3831139\" target=\"_blank\">https://www.bilibili.com/read/cv3831139</a>\n出处： bilibili</p>\n<h1 id=\"6比较两个版本字符串version1和version2-answer\">6.比较两个版本字符串version1和version2 <a href=\"https://www.nowcoder.com/questionTerminal/521049ca23f147d698e1cff923c3262a\" target=\"_blank\">answer</a><a href=\"#6比较两个版本字符串version1和version2-answer\" title=\"6.比较两个版本字符串version1和version2 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>如果version1 &gt; version2 返回1，如果 version1 &lt; version2 返回-1，不然返回0.</p>\n<p>输入的version字符串非空，只包含数字和字符.。.字符不代表通常意义上的小数点，只是用来区分数字序列。例如字符串2.5并不代表二点五，只是代表版本是第一级版本号是2，第二级版本号是5.</p>\n<h3 id=\"输入描述-5\">输入描述:<a href=\"#输入描述-5\" title=\"输入描述:\"></a></h3><blockquote>\n<p>两个字符串，用空格分割。<br>每个字符串为一个version字符串，非空，只包含数字和字符.</p>\n</blockquote>\n<h3 id=\"输出描述-5\">输出描述:<a href=\"#输出描述-5\" title=\"输出描述:\"></a></h3><blockquote>\n<p>只能输出1, -1，或0</p>\n</blockquote>\n<h3 id=\"输入例子1-5\">输入例子1:<a href=\"#输入例子1-5\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>0.1 1.1</p>\n</blockquote>\n<h3 id=\"输出例子1-5\">输出例子1:<a href=\"#输出例子1-5\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>-1</p>\n</blockquote>\n<h1 id=\"7精灵鼠从入口到出口的最少减少速度-answer\">7.精灵鼠从入口到出口的最少减少速度 <a href=\"https://www.nowcoder.com/questionTerminal/6171d3a8748248248c21a3c8f330396d\" target=\"_blank\">answer</a><a href=\"#7精灵鼠从入口到出口的最少减少速度-answer\" title=\"7.精灵鼠从入口到出口的最少减少速度 answer\"></a></h1><blockquote>\n<p>时间限制：2秒<br>空间限制：131072K</p>\n</blockquote>\n<p>猛兽侠中精灵鼠在利剑飞船的追逐下逃到一个n*n的建筑群中，精灵鼠从（0,0）的位置进入建筑群，建筑群的出口位置为（n-1,n-1），建筑群的每个位置都有阻碍，每个位置上都会相当于给了精灵鼠一个固定值减速，因为精灵鼠正在逃命所以不能回头只能向前或者向下逃跑，现在问精灵鼠最少在减速多少的情况下逃出迷宫？</p>\n<h3 id=\"输入描述-6\">输入描述:<a href=\"#输入描述-6\" title=\"输入描述:\"></a></h3><blockquote>\n<p>第一行迷宫的大小: n &gt;=2 &amp; n &lt;= 10000；<br>第2到n+1行，每行输入为以&#39;,&#39;分割的该位置的减速,减速f &gt;=1 &amp; f &lt; 10。</p>\n</blockquote>\n<h3 id=\"输出描述-6\">输出描述:<a href=\"#输出描述-6\" title=\"输出描述:\"></a></h3><blockquote>\n<p>精灵鼠从入口到出口的最少减少速度？</p>\n</blockquote>\n<h3 id=\"输入例子1-6\">输入例子1:<a href=\"#输入例子1-6\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>3<br>5,5,7<br>6,7,8<br>2,2,4</p>\n</blockquote>\n<h3 id=\"输出例子1-6\">输出例子1:<a href=\"#输出例子1-6\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>19</p>\n</blockquote>\n<h1 id=\"8顺时针打印数字矩阵-answer\">8.顺时针打印数字矩阵 <a href=\"https://www.nowcoder.com/questionTerminal/ce0c22a435114108bd9acc75f81b5802\" target=\"_blank\">answer</a><a href=\"#8顺时针打印数字矩阵-answer\" title=\"8.顺时针打印数字矩阵 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>给定一个数字矩阵，请设计一个算法从左上角开始顺时针打印矩阵元素</p>\n<h3 id=\"输入描述-7\">输入描述:<a href=\"#输入描述-7\" title=\"输入描述:\"></a></h3><blockquote>\n<p>输入第一行是两个数字，分别代表行数M和列数N；接下来是M行，每行N个数字，表示这个矩阵的所有元素；当读到M=-1，N=-1时，输入终止。</p>\n</blockquote>\n<h3 id=\"输出描述-7\">输出描述:<a href=\"#输出描述-7\" title=\"输出描述:\"></a></h3><blockquote>\n<p>请按逗号分割顺时针打印矩阵元素（注意最后一个元素末尾不要有逗号！例如输出“1，2，3”，而不是“1，2，\n3，”），每个矩阵输出完成后记得换行</p>\n</blockquote>\n<h3 id=\"输入例子1-7\">输入例子1:<a href=\"#输入例子1-7\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>3 3<br>1 2 3<br>4 5 6<br>7 8 9<br>-1 -1</p>\n</blockquote>\n<h3 id=\"输出例子1-7\">输出例子1:<a href=\"#输出例子1-7\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>1,2,3,6,9,8,7,4,5</p>\n</blockquote>\n<h1 id=\"9写一段程序判断ip字符串是否属于内网ip-answer\">9.写一段程序判断IP字符串是否属于内网IP <a href=\"https://www.nowcoder.com/questionTerminal/80ce674313ff43af9d7ac7a41ae21527\" target=\"_blank\">answer</a><a href=\"#9写一段程序判断ip字符串是否属于内网ip-answer\" title=\"9.写一段程序判断IP字符串是否属于内网IP answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>从业 666 年的 BILIBILI 网络安全工程师 KindMo 最近很困惑，公司有一个业务总是受到 SSRF 攻击。请帮他写一个程序，判断输入的字符串是否属于内网IP，用于防御该漏洞。\n我们知道常见的内网IP有，127.0.0.1，192.168.0.1 等。</p>\n<h3 id=\"输入描述-8\">输入描述:<a href=\"#输入描述-8\" title=\"输入描述:\"></a></h3><blockquote>\n<p>每次输入仅包含一个IP字符串，即一个测试样例</p>\n</blockquote>\n<h3 id=\"输出描述-8\">输出描述:<a href=\"#输出描述-8\" title=\"输出描述:\"></a></h3><blockquote>\n<p>对于每个测试实例输出整数1或0，1代表True，即输入属于内网IP，0代表False，即输入不属于内网IP或不是IP字符串。</p>\n</blockquote>\n<h3 id=\"输入例子1-8\">输入例子1:<a href=\"#输入例子1-8\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>42.96.146.169</p>\n</blockquote>\n<h3 id=\"输出例子1-8\">输出例子1:<a href=\"#输出例子1-8\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>0</p>\n</blockquote>\n<h1 id=\"10给定一个整数数组判断其中是否有3个数和为n-answer\">10.给定一个整数数组,判断其中是否有3个数和为N <a href=\"https://www.nowcoder.com/questionTerminal/b69c933c28164cbd8852820c16556a84\" target=\"_blank\">answer</a><a href=\"#10给定一个整数数组判断其中是否有3个数和为n-answer\" title=\"10.给定一个整数数组,判断其中是否有3个数和为N answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：131072K</p>\n</blockquote>\n<p>给定一个整数数组,判断其中是否有3个数和为N</p>\n<h3 id=\"输入描述-9\">输入描述:<a href=\"#输入描述-9\" title=\"输入描述:\"></a></h3><blockquote>\n<p>输入为一行<br>逗号前为一个整数数组，每个元素间用空格隔开；逗号后为N</p>\n</blockquote>\n<h3 id=\"输出描述-9\">输出描述:<a href=\"#输出描述-9\" title=\"输出描述:\"></a></h3><blockquote>\n<p>输出bool值<br>True表示存在3个和为N的数<br>False表示不存在3个和为N的数\\</p>\n</blockquote>\n<h3 id=\"输入例子1-9\">输入例子1:<a href=\"#输入例子1-9\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>1 2 3 4 5,10</p>\n</blockquote>\n<h3 id=\"输出例子1-9\">输出例子1:<a href=\"#输出例子1-9\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>True</p>\n</blockquote>\n<h1 id=\"11实现一个html语法检查器-answer\">11.实现一个HTML语法检查器 <a href=\"https://www.nowcoder.com/questionTerminal/bbe2e0eb156446fd9a8de997e9189fe9\" target=\"_blank\">answer</a><a href=\"#11实现一个html语法检查器-answer\" title=\"11.实现一个HTML语法检查器 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>实现一个HTML语法检查器。HTML语法规则简化如下：标签必须闭合，可以由开始和结束两个标签闭合，如<code>&lt;div&gt;&lt;/div&gt;</code>，也可以自闭合，\n如<code>&lt;div /&gt;</code>\n标签可以嵌套如<code>&lt;div&gt;&lt;a&gt;&lt;/a&gt;&lt;/div&gt;</code>或者 <code>&lt;div&gt;&lt;a/&gt;&lt;/div&gt;</code>，但是标签不能交叉：<code>&lt;div&gt;&lt;a&gt;&lt;/div&gt;&lt;/a&gt;</code>是不允许的标签里可以有属性\n如<code>&lt;div id=&quot;a&lt;1&quot;&gt;&lt;/div&gt;</code>\n属性的规则是name=&quot;任意非引号字符&quot;，多属性声明之间必须有空格，属性声明不符合规则时，整段HTML都算语法错误\n输入文本只会出现字母a-z和&lt;&gt;&quot;=\n请用任意语言实现一个HTML语法检查器函数，有语法错误返回1，没有语法错误返回0</p>\n<h3 id=\"输入描述-10\">输入描述:<a href=\"#输入描述-10\" title=\"输入描述:\"></a></h3><blockquote>\n<p>一行，一个HTML字符串</p>\n</blockquote>\n<h3 id=\"输出描述-10\">输出描述:<a href=\"#输出描述-10\" title=\"输出描述:\"></a></h3><blockquote>\n<p>有语法错误返回1，没有语法错误返回0</p>\n</blockquote>\n<h1 id=\"12孙悟空的徒弟-answer\">12.孙悟空的徒弟 <a href=\"https://www.nowcoder.com/questionTerminal/7b841a840db64f5ebec77f6ee7e307e2\" target=\"_blank\">answer</a><a href=\"#12孙悟空的徒弟-answer\" title=\"12.孙悟空的徒弟 answer\"></a></h1><blockquote>\n<p>时间限制：3秒<br>空间限制：131072K</p>\n</blockquote>\n<p>打败魔人布欧以后，孙悟空收了n个徒弟，每个徒弟战斗力各不相同。他教导所有的徒弟和体术，合体后战斗力为原战斗力相乘。任何两个徒弟都可以合体，所以一共有n*(n-1)/2种合体徒弟。有一天，他想考验一下孙悟天战斗力如何，希望在所有n*(n-1)/2种合体徒弟中选择战斗力第k高的，与孙悟天对战。可是孙悟空徒弟太多了，他已然懵逼，于是找到了你，请你帮他找到对的人。</p>\n<h3 id=\"输入描述-11\">输入描述:<a href=\"#输入描述-11\" title=\"输入描述:\"></a></h3><blockquote>\n<p>第一行两个int。徒弟数量：n &lt;= 1*10^6；战斗力排名:k &lt;= n*(n-1)/2<br>第二行空格分隔n个int，表示每个徒弟的战斗力。</p>\n</blockquote>\n<h3 id=\"输出描述-11\">输出描述:<a href=\"#输出描述-11\" title=\"输出描述:\"></a></h3><blockquote>\n<p>战斗力排名k的合体徒弟战斗力。</p>\n</blockquote>\n<h3 id=\"输入例子1-10\">输入例子1:<a href=\"#输入例子1-10\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>5 2<br>1 3 4 5 9</p>\n</blockquote>\n<h3 id=\"输出例子1-10\">输出例子1:<a href=\"#输出例子1-10\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>36</p>\n</blockquote>\n<h1 id=\"13翻转链表-answer\">13.翻转链表 <a href=\"https://www.nowcoder.com/questionTerminal/f350f14cd22c41aabfa7e54a1b8e8825\" target=\"_blank\">answer</a><a href=\"#13翻转链表-answer\" title=\"13.翻转链表 answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：32768K</p>\n</blockquote>\n<p>对于一个链表 L: L0→L1→…→Ln-1→Ln,<br>将其翻转成 L0→Ln→L1→Ln-1→L2→Ln-2→…</p>\n<p>输入是一串数字，请将其转换成单链表格式之后，再进行操作</p>\n<h3 id=\"输入描述-12\">输入描述:<a href=\"#输入描述-12\" title=\"输入描述:\"></a></h3><blockquote>\n<p>一串数字，用逗号分隔</p>\n</blockquote>\n<h3 id=\"输出描述-12\">输出描述:<a href=\"#输出描述-12\" title=\"输出描述:\"></a></h3><blockquote>\n<p>一串数字，用逗号分隔</p>\n</blockquote>\n<h3 id=\"输入例子1-11\">输入例子1:<a href=\"#输入例子1-11\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>1,2,3,4,5</p>\n</blockquote>\n<h3 id=\"输出例子1-11\">输出例子1:<a href=\"#输出例子1-11\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>1,5,2,4,3</p>\n</blockquote>\n<h1 id=\"14ん红茶？answer\">14.ん...红茶？<a href=\"https://www.nowcoder.com/questionTerminal/14a045880df44cf79626f079bd9f07f1\" target=\"_blank\">answer</a><a href=\"#14ん红茶？answer\" title=\"14.ん...红茶？answer\"></a></h1><blockquote>\n<p>时间限制：1秒<br>空间限制：131072K</p>\n</blockquote>\n<p>高贵的蕾米莉亚大小姐每天需要饮用定量 B 型血的红茶以保持威严，并且要分两杯在不同时段饮用。\n女仆长十六夜咲夜每天可以制作很多杯不同剂量 B 型血的红茶供蕾米莉亚大小姐饮用。\n某日，你和天才妖精琪露诺偷偷潜入红魔馆被咲夜抓住，要求在今日份的红茶中挑出所有满足大小姐要求的茶杯，否则……</p>\n<h3 id=\"输入描述-13\">输入描述:<a href=\"#输入描述-13\" title=\"输入描述:\"></a></h3><blockquote>\n<p>每个样例有三行输入，第一行输入表示茶杯个数，第二行输入表示每份茶杯里的 B 型血剂量，第三行表示大小姐今天的定量</p>\n</blockquote>\n<h3 id=\"输出描述-13\">输出描述:<a href=\"#输出描述-13\" title=\"输出描述:\"></a></h3><blockquote>\n<p>对每一个样例，输出所有可能的搭配方案，如果有多种方案，请按每个方案的第一杯 B 型血剂量的大小升序排列。<br>如果无法找到任何一种满足大小姐的方案，输出&quot;NO&quot;(不包括引号)并换行。</p>\n</blockquote>\n<h3 id=\"输入例子1-12\">输入例子1:<a href=\"#输入例子1-12\" title=\"输入例子1:\"></a></h3><blockquote>\n<p>7<br>2 4 6 1 3 5 7<br>7</p>\n</blockquote>\n<h3 id=\"输出例子1-12\">输出例子1:<a href=\"#输出例子1-12\" title=\"输出例子1:\"></a></h3><blockquote>\n<p>1 6<br>2 5<br>3 4</p>\n</blockquote>\n","prev":{"title":"Cloudflare Worker+jsproxy实现浏览器代理","link":"2019/11/04/Cloudflare_Worker_jsproxy"},"next":{"title":"高大上博客制作教程","link":"2019/10/05/blog-jiao-cheng"},"plink":"https://gwliang.com/2019/10/23/2019bilibili/","reward":true,"copyright":{"license":"自由转载-非商用-禁止演绎-保持署名(<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"Gaowan Liang","link":"<a href=\"https://gwliang.com/2019/10/23/2019bilibili/\" title=\"B站2019秋招编程题\">https://gwliang.com/2019/10/23/2019bilibili/</a>"}}