{"title":"从零开始实现hexo博客的在线编辑（未完成）","date":"2019-11-19T01:18:16.000Z","date_formatted":{"ll":"2019年11月19日","L":"2019/11/19","MM-DD":"11-19"},"link":"2019/11/19/implement-hexo-blog-online-editing-from-scratch","comments":true,"categories":["博客"],"updated":"2020-03-19T13:11:11.297Z","content":"<p>⚠ 本教程需要服务器（VPS），Serverless版本正在探索，请大家耐心等待</p>\n<h1 id=\"前言\">前言<a href=\"#前言\" title=\"前言\"></a></h1><p>我今年五月参加的微信小程序开发赛获得了全国三等奖，微信赠了我1k的优惠券\n<img src=\"https://i.loli.net/2019/11/19/4RsvXH2zO8mJn5w.png\" class=\"cy\">\n<img src=\"https://i.loli.net/2019/11/19/gW7O9TXAD1PMZiY.png\" class=\"cy\">\n不过这个优惠券只能购买没有优惠过的服务器，所以1k优惠券也是了了，最后在我的精打细算下，买了一年零三个月的服务器。买来不能闲置着不用啊，于是我准备构建一个在线写hexo的平台，这样就可以摆脱平台的束缚，在任意环境下都可以进行写作了。由于这个服务器是新购置的，所以我从零开始写一下相关的内容。</p>\n<h1 id=\"配置相关环境\">配置相关环境<a href=\"#配置相关环境\" title=\"配置相关环境\"></a></h1><h2 id=\"nignxnginx比较麻烦，下面更新caddy的\"><del>Nignx</del>(Nginx比较麻烦，下面更新caddy的)<a href=\"#nignxnginx比较麻烦，下面更新caddy的\" title=\"Nignx(Nginx比较麻烦，下面更新caddy的)\"></a></h2><p>配置Nignx是关键，虽然很俗，但是这个活不能不干。其实也可以有很多选择，比如Caddy，<del>Apache</del>（这年头个人搭建网站还有人用Apache吗，配置巨麻烦）</p>\n<p>Debian apt 自带的 Nginx 太老，可以通过更新源的方式来解决</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> deb http://nginx.org/packages/debian/ stretch nginx | sudo tee /etc/apt/sources.list.d/nginx.list</span><br><span class=\"line\">wget http://nginx.org/keys/nginx_signing.key &amp;&amp; sudo apt-key add nginx_signing.key </span><br><span class=\"line\">sudo apt update &amp;&amp; apt install nginx -y</span><br></pre></td></tr></table></figure>\n\n<p>到这一部分就完成了最新稳定版的 Nginx 的安装。需要注意的是，这一步安装的 Nginx 和系统自带的 Nginx 的配置目录略有区别，可以用一下几个简单的命令修正：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir /etc/nginx/&#123;sites-available,sites-enabled&#125;</span><br><span class=\"line\">sudo mv /etc/nginx/conf.d/* /etc/nginx/sites-available</span><br><span class=\"line\">sudo rmdir -f /etc/nginx/conf.d/</span><br><span class=\"line\">sudo perl -pi -e <span class=\"string\">'s/conf.d/sites-enabled/g'</span> /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>当然这个没必要，我就没弄</p>\n<p>最后出现这个就是成功了\n<img src=\"https://i.loli.net/2019/11/19/fWvASTeK84U6xLa.png\" class=\"cy\"></p>\n<h2 id=\"nodejs\">NodeJS<a href=\"#nodejs\" title=\"NodeJS\"></a></h2><p>NodeJS是最重要的，没有Nginx也得有NodeJS，这是我们写博客的关键，Debian自带的NodeJS还是比较老的，推荐用 <a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\">nvm</a> 安装</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>然后<strong>关闭再打开终端</strong>，就可以用了</p>\n<p>我目前NodeJS最新版是12.13.0，输入</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 12.13.0</span><br></pre></td></tr></table></figure>\n<p>就安装了NodeJS 12.13.0版本</p>\n<p><img src=\"https://i.loli.net/2019/11/19/CN5elIwdTfQYVmZ.png\" class=\"cy\"></p>\n<h2 id=\"git\">git<a href=\"#git\" title=\"git\"></a></h2><p>git 直接用 apt 安装就行了，这个不再赘述。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install git</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"工作区配置\">工作区配置<a href=\"#工作区配置\" title=\"工作区配置\"></a></h1><h2 id=\"把你的博客源文件上传github\">把你的博客源文件上传Github<a href=\"#把你的博客源文件上传github\" title=\"把你的博客源文件上传Github\"></a></h2><p>为了多端同步，也为了防止服务器不好上传你的文件，这个时候就需要将你的博客的源文件文件上传到GitHub，由于Hexo会吃掉你博客的master分支，这个时候就需要先创建一个分支。在你博客源文件的文件夹下打开Git bash，输入下面的命令</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b inside</span><br></pre></td></tr></table></figure>\n\n<p>这样就创建了一个inside分支，因为我这个博客的主题就是inside。然后<code>git push</code>到GitHub上，本地这边的工作就完成了。</p>\n<h2 id=\"在服务器上把你的源代码clone下来\">在服务器上把你的源代码clone下来<a href=\"#在服务器上把你的源代码clone下来\" title=\"在服务器上把你的源代码clone下来\"></a></h2><p>由于服务器是全新的，我就按全新的来说，首先输入下面命令：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"你GitHub的用户名\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"你GitHub注册时用的邮箱\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你GitHub注册时用的邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p>默认回车即可，然后输入<code>cat /root/.ssh/id_rsa.pub</code>，然后把输出的东西整个复制出来\n<img src=\"https://cdn.jsdelivr.net/gh/gaowanliang/p/img/20191127204816.png\" class=\"cy\">\n打开<a href=\"https://github.com\" target=\"_blank\">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，Title随便。</p>\n<p>把刚才输出的一串复制到key里即可</p>\n<p>输入<code>ssh -T git@github.com</code>，问Are you sure you want to continue connecting (yes/no)?时输入yes，如果出现你的用户名，那就成功了。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --system user.name <span class=\"string\">\"你GitHub的用户名\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git config --system user.email <span class=\"string\">\"你GitHub注册时用的邮箱\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你GitHub注册时用的邮箱\"</span></span><br></pre></td></tr></table></figure>","prev":{"title":"使用 Go 语言实现一个云剪切板（未开始）","link":"2019/11/22/yong-go-shi-xian-yi-ge-yun-jian-qie-ban"},"next":{"title":"Cloudflare Worker+jsproxy实现浏览器代理","link":"2019/11/04/Cloudflare_Worker_jsproxy"},"plink":"https://gwliang.com/2019/11/19/implement-hexo-blog-online-editing-from-scratch/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"配置相关环境","title":"配置相关环境","index":"2","children":[{"id":"nignxnginx比较麻烦，下面更新caddy的","title":"Nignx(Nginx比较麻烦，下面更新caddy的)","index":"2.1"},{"id":"nodejs","title":"NodeJS","index":"2.2"},{"id":"git","title":"git","index":"2.3"}]},{"id":"工作区配置","title":"工作区配置","index":"3","children":[{"id":"把你的博客源文件上传github","title":"把你的博客源文件上传Github","index":"3.1"},{"id":"在服务器上把你的源代码clone下来","title":"在服务器上把你的源代码clone下来","index":"3.2"}]}],"reward":true,"copyright":{"license":"自由转载-非商用-禁止演绎-保持署名(<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"Gaowan Liang","link":"<a href=\"https://gwliang.com/2019/11/19/implement-hexo-blog-online-editing-from-scratch/\" title=\"从零开始实现hexo博客的在线编辑（未完成）\">https://gwliang.com/2019/11/19/implement-hexo-blog-online-editing-from-scratch/</a>"}}