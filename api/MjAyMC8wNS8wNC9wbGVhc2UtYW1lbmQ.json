{"title":"免费开源的bitwarden_rs自建密码管理系统-安装,使用和备份教程","date":"2020-05-04T02:06:40.000Z","date_formatted":{"ll":"2020年5月4日","L":"2020/05/04","MM-DD":"05-04"},"thumbnail":"https://cdn.jsdelivr.net/gh/gaowanliang/p/img/71850186_p4.jpg","link":"2020/05/04/please-amend","comments":true,"tags":["教程"],"categories":["bitwarden"],"updated":"2020-05-04T12:18:18.982Z","content":"<h1 id=\"前言\">前言<a href=\"#前言\" title=\"前言\"></a></h1><p>原来的时候看过Testv介绍1Password的视频，可以全平台自动填充密码，自动生成无规律密码，看完之后很心动，毕竟密码安全也很重要，但是1Password太贵了，一年至少需要35美元。而且1Password还只能使用信用卡付款，像Paypal也不支持，这让很多想尝试1Password的朋友“望而却步”了。这篇文章主要分享一下在功能上和使用体验上媲美1Password的免费开源密码管理系统Bitwarden，自建Bitwarden，再也不用担心1Password删库“跑路”了。</p>\n<h1 id=\"bitwarden_rs安装教程\">bitwarden_rs安装教程<a href=\"#bitwarden_rs安装教程\" title=\"bitwarden_rs安装教程\"></a></h1><blockquote>\n<p>网站：<br>官网：<a href=\"https://bitwarden.com/\\\" target=\"_blank\">https://bitwarden.com/\\</a>\n第三方项目：<a href=\"https://github.com/dani-garcia/bitwarden_rs\" target=\"_blank\">https://github.com/dani-garcia/bitwarden_rs</a></p>\n</blockquote>\n<p>Bitwarden官方推荐使用Docker镜像安装，但是Bitwarden 服务器使用 .Net 开发，如果使用 Docker 来部署，镜像体积过大；此外它使用 MSSQL 数据库，部署这个数据库对服务器配置要求比较高。</p>\n<p>而bitwarden_rs是第三方开发的Bitwarden安装镜像。bitwarden_rs采用 Rust 实现了 Bitwarden服务器，这个实现更进一步降低了对机器配置的要求，并且 Docker 镜像体积很小，部署非常方便。此外，官方服务器中需要付费订阅的一些功能，在这个实现中是免费的。测试在512MB内存上机子完美运行bitwarden_rs。</p>\n<h2 id=\"安装前准备\">安装前准备<a href=\"#安装前准备\" title=\"安装前准备\"></a></h2><ul><li>一台VPS主机。bitwarden_rs使用Docker镜像来安装，需要使用一台VPS主机，配置不用太高，用512MB内存也能跑起来，而且非常地流畅。</li>\n<li>一个域名。虽然有市面上有少的免费域名，但是建议还是使用付费的域名，密码这个东西比较重要，一旦确定要自建密码管理系统的话就要保证可以长期使用。</li>\n</ul><h2 id=\"安装docker\">安装Docker<a href=\"#安装docker\" title=\"安装Docker\"></a></h2><p>你需要先安装 Docker CE (社区版)和Docker Compose，以下命令是基于Debian系统的演示，如果你是CentOS、Ubuntu，请参考官网：</p>\n<blockquote>\n<p>安装 Docker CE (社区版)：<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\\\" target=\"_blank\">https://docs.docker.com/install/linux/docker-ce/ubuntu/\\</a>\n安装 Docker Compose：<a href=\"https://docs.docker.com/compose/install/#install-compose\" target=\"_blank\">https://docs.docker.com/compose/install/#install-compose</a></p>\n</blockquote>\n<p>如果你已经安装过，就不需要看这一步了</p>\n<p>Debian系统安装Docker CE 和Docker Compose如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#卸载()</span></span><br><span class=\"line\">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br><span class=\"line\"><span class=\"comment\">#SET UP THE REPOSITORY</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    gnupg2 \\</span><br><span class=\"line\">    software-properties-common</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br><span class=\"line\"><span class=\"comment\">#检测是否安装成功</span></span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\"><span class=\"comment\">#有以下输出就表示成功添加Docker’s official GPG key:</span></span><br><span class=\"line\">root@hostfbc9e58d73:~<span class=\"comment\"># sudo apt-key fingerprint 0EBFCD88</span></span><br><span class=\"line\">pub   rsa4096 2017-02-22 [SCEA]</span><br><span class=\"line\">      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class=\"line\">uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;</span><br><span class=\"line\">sub   rsa4096 2017-02-22 [S]</span><br><span class=\"line\"><span class=\"comment\">#添加stable repository</span></span><br><span class=\"line\">sudo add-apt-repository \\</span><br><span class=\"line\">   <span class=\"string\">\"deb [arch=amd64] https://download.docker.com/linux/debian \\</span></span><br><span class=\"line\"><span class=\"string\">   <span class=\"variable\">$(lsb_release -cs)</span> \\</span></span><br><span class=\"line\"><span class=\"string\">   stable\"</span></span><br><span class=\"line\"><span class=\"comment\">#开始安装</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"><span class=\"comment\">#验证 Docker Engine - Community是否安装正确</span></span><br><span class=\"line\">sudo docker run hello-world</span><br><span class=\"line\"><span class=\"comment\">#有以下输出就表示正确安装</span></span><br><span class=\"line\">root@hostfbc9e58d73:~<span class=\"comment\"># sudo docker run hello-world</span></span><br><span class=\"line\">Unable to find image <span class=\"string\">'hello-world:latest'</span> locally</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">1b930d010525: Pull complete </span><br><span class=\"line\">Digest: sha256:b8ba256769a0ac28dd126d584e0a2011cd2877f3f76e093a7ae560f2a5301c00</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> hello-world:latest</span><br><span class=\"line\">Hello from Docker!</span><br><span class=\"line\">This message shows that your installation appears to be working correctly.</span><br><span class=\"line\">To generate this message, Docker took the following steps:</span><br><span class=\"line\"> 1. The Docker client contacted the Docker daemon.</span><br><span class=\"line\"> 2. The Docker daemon pulled the <span class=\"string\">\"hello-world\"</span> image from the Docker Hub.</span><br><span class=\"line\">    (amd64)</span><br><span class=\"line\"> 3. The Docker daemon created a new container from that image <span class=\"built_in\">which</span> runs the</span><br><span class=\"line\">    executable that produces the output you are currently reading.</span><br><span class=\"line\"> 4. The Docker daemon streamed that output to the Docker client, <span class=\"built_in\">which</span> sent it</span><br><span class=\"line\">    to your terminal.</span><br><span class=\"line\">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class=\"line\"> $ docker run -it ubuntu bash</span><br><span class=\"line\">Share images, automate workflows, and more with a free Docker ID:</span><br><span class=\"line\"> https://hub.docker.com/</span><br><span class=\"line\">For more examples and ideas, visit:</span><br><span class=\"line\"> https://docs.docker.com/get-started/</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#安装 Docker Compose</span></span><br><span class=\"line\">sudo curl -L <span class=\"string\">\"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class=\"variable\">$(uname -s)</span>-<span class=\"variable\">$(uname -m)</span>\"</span> -o /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\">sudo chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\"><span class=\"comment\">#检测是否安装成功</span></span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\"><span class=\"comment\">#有输出即表示成功</span></span><br><span class=\"line\">docker-compose version 1.25.5, build 4667896b</span><br><span class=\"line\"><span class=\"comment\">#如果提示命令不存在，可以手动创建链接</span></span><br><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装caddy\">安装Caddy<a href=\"#安装caddy\" title=\"安装Caddy\"></a></h2><p>bitwarden_rs官方可以选择使用Caddy来搭建Web服务，主要原因是因为Caddy安装配置简单。</p>\n<p>安装方法点击 <a href=\"https://gwliang.com/2020/01/27/caddy-install\" target=\"_blank\">https://gwliang.com/2020/01/27/caddy-install</a></p>\n<p>当然你也可以选择使用Nginx，下面也会给出Nginx的配置，如果你没有用过HTTP Server，推荐使用Caddy来上手.</p>\n<h2 id=\"bitwarden_rs安装\">bitwarden_rs安装<a href=\"#bitwarden_rs安装\" title=\"bitwarden_rs安装\"></a></h2><p>bitwarden_rs安装只需要一句代码就可以搞定：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull bitwardenrs/server:latest</span><br></pre></td></tr></table></figure>\n<h1 id=\"bitwarden_rs配置方法\">bitwarden_rs配置方法<a href=\"#bitwarden_rs配置方法\" title=\"bitwarden_rs配置方法\"></a></h1><h2 id=\"启动bitwarden_rs\">启动bitwarden_rs<a href=\"#启动bitwarden_rs\" title=\"启动bitwarden_rs\"></a></h2><p>启动bitwarden也很简单，我们只需要执行以下代码即可：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">  -e SIGNUPS_ALLOWED=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">  -e WEBSOCKET_ENABLED=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">  -e LOG_FILE=/data/bitwarden.log \\</span><br><span class=\"line\">  -p 8880:80 \\</span><br><span class=\"line\">  -p 3012:3012 \\</span><br><span class=\"line\">  -v /bw-data/:/data/ \\</span><br><span class=\"line\">  bitwardenrs/server:latest</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置caddynginx\">设置Caddy/Nginx<a href=\"#设置caddynginx\" title=\"设置Caddy/Nginx\"></a></h2><p>如果你使用的是Caddy，在<code>/usr/local/caddy/Caddyfile</code>里输入下面的内容即可（要改成下面的域名）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwd.gwl.wtf &#123;</span><br><span class=\"line\">  gzip</span><br><span class=\"line\">  tls asdf@q.com</span><br><span class=\"line\">  proxy &#x2F; 127.0.0.1:8880 &#123;</span><br><span class=\"line\">   websocket</span><br><span class=\"line\">   header_upstream -Origin</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  proxy &#x2F;notifications&#x2F;hub 127.0.0.1:3012 &#123;</span><br><span class=\"line\">   websocket</span><br><span class=\"line\">   header_upstream -Origin</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  proxy &#x2F;notifications&#x2F;hub&#x2F;negotiate 127.0.0.1:8880 &#123;</span><br><span class=\"line\">   websocket</span><br><span class=\"line\">   header_upstream -Origin</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你使用的是Nginx，可以使用下面的配置（先要配置好了域名、SSL等）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  listen 443 ssl http2;</span><br><span class=\"line\">  ssl_certificate &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;ssl&#x2F;pwd.gwl.wtf.crt;</span><br><span class=\"line\">  ssl_certificate_key &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;ssl&#x2F;pwd.gwl.wtf.key;</span><br><span class=\"line\">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class=\"line\">  ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class=\"line\">  ssl_prefer_server_ciphers on;</span><br><span class=\"line\">  ssl_session_timeout 10m;</span><br><span class=\"line\">  ssl_session_cache builtin:1000 shared:SSL:10m;</span><br><span class=\"line\">  ssl_buffer_size 1400;</span><br><span class=\"line\">  add_header Strict-Transport-Security max-age&#x3D;15768000;</span><br><span class=\"line\">  ssl_stapling on;</span><br><span class=\"line\">  ssl_stapling_verify on;</span><br><span class=\"line\">  server_name pwd.gwl.wtf;</span><br><span class=\"line\">  if ($ssl_protocol &#x3D; &quot;&quot;) &#123; return 301 https:&#x2F;&#x2F;$host$request_uri; &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   client_max_body_size 128M;</span><br><span class=\"line\">    location &#x2F; &#123;</span><br><span class=\"line\">        proxy_set_header  Host  &#39;pwd.gwl.wtf&#39;;</span><br><span class=\"line\">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8880;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    location &#x2F;notifications&#x2F;hub &#123;</span><br><span class=\"line\">    proxy_pass http:&#x2F;&#x2F;127.0.0.1:3012;</span><br><span class=\"line\">    proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location &#x2F;notifications&#x2F;hub&#x2F;negotiate &#123;</span><br><span class=\"line\">    proxy_pass http:&#x2F;&#x2F;127.0.0.1:8880;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重启Caddy/Nginx，刷新一下浏览器，你可以看到bitwarden已经可以正常访问了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/05/04/Y9QKpj.png\" class=\"cy\"></p>\n<h2 id=\"禁止注册\">禁止注册<a href=\"#禁止注册\" title=\"禁止注册\"></a></h2><p>为了保证bitwarden服务器的稳定，你可以禁止bitwarden注册新用户（这一项可以放在最后，否则你自己都无法注册了）。禁止新用户注册：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">  -e SIGNUPS_ALLOWED&#x3D;false \\</span><br><span class=\"line\">  -v &#x2F;bw-data&#x2F;:&#x2F;data&#x2F; \\</span><br><span class=\"line\">  -p 80:80 \\</span><br><span class=\"line\">  bitwardenrs&#x2F;server:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭、重启、升级\">关闭、重启、升级<a href=\"#关闭、重启、升级\" title=\"关闭、重启、升级\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关闭： docker stop bitwarden</span><br><span class=\"line\">启动： docker start bitwarden</span><br></pre></td></tr></table></figure>\n<p>需要升级的话，你只需要拉取最新的image，rm原来的image，然后按之前的方法启动一个新的容器即可</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Pull the latest version</span><br><span class=\"line\">docker pull bitwardenrs&#x2F;server:latest</span><br><span class=\"line\"></span><br><span class=\"line\"># Stop and remove the old container</span><br><span class=\"line\">docker stop bitwarden</span><br><span class=\"line\">docker rm bitwarden</span><br><span class=\"line\"></span><br><span class=\"line\"># Start new container with the data mounted</span><br><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">  -e SIGNUPS_ALLOWED&#x3D;true \\</span><br><span class=\"line\">  -e WEBSOCKET_ENABLED&#x3D;true \\</span><br><span class=\"line\">  -e LOG_FILE&#x3D;&#x2F;data&#x2F;bitwarden.log \\</span><br><span class=\"line\">  -p 8880:80 \\</span><br><span class=\"line\">  -p 3012:3012 \\</span><br><span class=\"line\">  -v &#x2F;bw-data&#x2F;:&#x2F;data&#x2F; \\</span><br><span class=\"line\">  bitwardenrs&#x2F;server:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"docker-compose配置\">Docker Compose配置<a href=\"#docker-compose配置\" title=\"Docker Compose配置\"></a></h1><p><strong>这一步可选</strong>。使用Docker Compose配置可以方便你管理Docker，不用也可以。 在bitwarden目录创建docker-compose.yml文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p>在docker-compose.yml写入一下配置，参考官方wiki（<a href=\"https://github.com/dani-garcia/bitwarden_rs/wiki/Using-Docker-Compose）\" target=\"_blank\">https://github.com/dani-garcia/bitwarden_rs/wiki/Using-Docker-Compose）</a></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">\"3\"</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  bitwarden:</span><br><span class=\"line\">    image: bitwardenrs/server</span><br><span class=\"line\">    container_name: bitwardenrs</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">        - <span class=\"string\">\"127.0.0.1:8880:80\"</span> <span class=\"comment\">#将8880端口映射到镜像80端口</span></span><br><span class=\"line\">        - <span class=\"string\">\"127.0.0.1:3012:3012\"</span></span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./bw-data:/data</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      WEBSOCKET_ENABLED: <span class=\"string\">\"true\"</span> <span class=\"comment\">#开启WebSocket</span></span><br><span class=\"line\">      SIGNUPS_ALLOWED: <span class=\"string\">\"true\"</span> <span class=\"comment\">#开启注册，自己注册后改成fale</span></span><br><span class=\"line\">      WEB_VAULT_ENABLED: <span class=\"string\">\"true\"</span> <span class=\"comment\">#web客户端\\</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"运行服务\">运行服务<a href=\"#运行服务\" title=\"运行服务\"></a></h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d <span class=\"comment\">#运行服务</span></span><br><span class=\"line\">docker-compose down <span class=\"comment\">#关闭服务</span></span><br><span class=\"line\">docker-compose restart <span class=\"comment\">#重启服务</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"bitwarden管理密码\">bitwarden管理密码<a href=\"#bitwarden管理密码\" title=\"bitwarden管理密码\"></a></h1><h2 id=\"网页版bitwarden\">网页版bitwarden<a href=\"#网页版bitwarden\" title=\"网页版bitwarden\"></a></h2><p>网页版的bitwarden管理密码也是非常地方便。以下是bitwarden的界面，有中文：</p>\n<p><img src=\"https://s1.ax1x.com/2020/05/04/Y9YrzF.png\" class=\"cy\"></p>\n<p>这是bitwarden的设置页面</p>\n<p><img src=\"https://s1.ax1x.com/2020/05/04/Y9YRd1.png\" class=\"cy\"></p>\n<p>可以自己设置两步验证，加强安全性。</p>\n<h2 id=\"浏览器bitwarden\">浏览器bitwarden<a href=\"#浏览器bitwarden\" title=\"浏览器bitwarden\"></a></h2><p>bitwarden提供了Chrome、Firefox等浏览器插件，直接安装就可以启用。</p>\n<p>在插件设置中填入你自己的bitwarden地址（否则是进入到官方的地址）</p>\n<p><img src=\"https://s1.ax1x.com/2020/05/04/Y9YLdI.png\" class=\"cy\">\n<img src=\"https://s1.ax1x.com/2020/05/04/Y9tSSS.png\" class=\"cy\" alt=\"Y9tSSS.png\"></p>\n<p>更多设置等我出视频即可</p>\n<h1 id=\"bitwarden备份与恢复\">bitwarden备份与恢复<a href=\"#bitwarden备份与恢复\" title=\"bitwarden备份与恢复\"></a></h1><h2 id=\"手动备份\">手动备份<a href=\"#手动备份\" title=\"手动备份\"></a></h2><p>bitwarden备份最关键的就是sqlite3数据库文件了，你可以直接进入到<code>/bw-data</code>目录下，将sqlite3数据库保存下来。当然你也可以将bw-data目录下所有的包括附件文件夹、图标缓存文件夹、密钥等文件备份下来。</p>\n<h2 id=\"自动备份\">自动备份<a href=\"#自动备份\" title=\"自动备份\"></a></h2><p>利用定时任务执行bitwarden备份，首先新建一个文件夹：mkdir /bw-data/db-backup，然后执行数据库备份任务。代码如下（关于定时任务可以自行搜索<code>Crontab定时任务教程</code>）：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlite3 &#x2F;bw-data&#x2F;db.sqlite3 &quot;.backup &#39;&#x2F;bw-data&#x2F;db-backup&#x2F;backup.sqlite3&#39;&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"恢复备份\">恢复备份<a href=\"#恢复备份\" title=\"恢复备份\"></a></h2><p>bitwarden要恢复备份的话也很简单，直接将sqlite3数据库重写替换就可以了，其它的几个文件夹可以覆盖，也可以保留新的，不影响。如果你的数据库路径与原来的不一致，可以手动指定，代码示例：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">  -e DATABASE_URL&#x3D;&#x2F;database&#x2F;bitwarden.sqlite3 \\</span><br><span class=\"line\">  -v &#x2F;bw-data&#x2F;:&#x2F;data&#x2F; \\</span><br><span class=\"line\">  -v &#x2F;bw-database&#x2F;:&#x2F;database&#x2F; \\</span><br><span class=\"line\">  -p 80:80 \\</span><br><span class=\"line\">  bitwardenrs&#x2F;server:latest</span><br></pre></td></tr></table></figure>\n<h2 id=\"七牛云备份\">七牛云备份<a href=\"#七牛云备份\" title=\"七牛云备份\"></a></h2><p>本地备份只能防止数据出错，有恢复的余地。但是一旦服务器宕机，或者是无法连接，数据就取不出来了，这样就麻烦了。所以我们可以考虑使用七牛云备份到云服务器上，即使服务器宕机也可以把数据轻松下载下来。</p>\n<p>点击<a href=\"https://github.com/qiniu/qshell\" target=\"_blank\">这里</a>查看和下载qshell。解压并命名为qshell（应该是没有后缀名的），上传到服务器要执行该命令的用户目录里，比如我是用户名为aliyun的用户要执行该命令，就上传到/home/aliyun/upload/qiniu/目录下</p>\n<h3 id=\"给qshell授权\">给qshell授权<a href=\"#给qshell授权\" title=\"给qshell授权\"></a></h3><p>root用户下授予qshell运行权限，开放给所有人</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod a+x qshell</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置好qshell的ak和sk\">配置好qshell的ak和sk<a href=\"#配置好qshell的ak和sk\" title=\"配置好qshell的ak和sk\"></a></h2><p>ak和sk可以在七牛云“个人中心”--&gt;“密钥管理”查看。（存储空间的完整名称，就是你在对象存储里新建的存储空间名字）</p>\n<figure class=\"highlight\"><figcaption><span>aliyun</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;qshell account 你的access_key 你的secret_key aliyun（aliyun是我为qshell起的用户名，随便起）</span><br></pre></td></tr></table></figure>\n<p>完成之后检验一下是否添加成功：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;qshell account</span><br></pre></td></tr></table></figure>\n<h3 id=\"填写qshell配置文件\">填写qshell配置文件<a href=\"#填写qshell配置文件\" title=\"填写qshell配置文件\"></a></h3><p>填写好上传配置文件，命名为upload.conf，上传到qshell同一目录里，如果不清楚具体规则可以查看qshell的官方git主页。</p>\n<p>我这里给大家一份我用的备份信息,大家可以根据这个进行修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   &quot;src_dir&quot;            :   &quot;&#x2F;bw-data&quot;,</span><br><span class=\"line\">   &quot;bucket&quot;             :   &quot;bitwarden-bak&quot;,</span><br><span class=\"line\">   &quot;file_list&quot;          :   &quot;&quot;,</span><br><span class=\"line\">   &quot;key_prefix&quot;         :   &quot;&quot;,</span><br><span class=\"line\">   &quot;up_host&quot;            :   &quot;&quot;,</span><br><span class=\"line\">   &quot;overwrite&quot;          :   true,</span><br><span class=\"line\">   &quot;check_exists&quot;       :   false,</span><br><span class=\"line\">   &quot;check_hash&quot;         :   false,</span><br><span class=\"line\">   &quot;check_size&quot;         :   false,</span><br><span class=\"line\">   &quot;rescan_local&quot;       :   true,</span><br><span class=\"line\">   &quot;skip_file_prefixes&quot; :   &quot;&quot;,</span><br><span class=\"line\">   &quot;skip_path_prefixes&quot; :   &quot;&quot;,</span><br><span class=\"line\">   &quot;skip_fixed_strings&quot; :   &quot;&quot;,</span><br><span class=\"line\">   &quot;skip_suffixes&quot;      :   &quot;&quot;,</span><br><span class=\"line\">   &quot;log_file&quot;           :   &quot;&#x2F;opt&#x2F;qshell&#x2F;upload.log&quot;,</span><br><span class=\"line\">   &quot;log_level&quot;          :   &quot;info&quot;,</span><br><span class=\"line\">   &quot;log_rotate&quot;         :   1,</span><br><span class=\"line\">   &quot;log_stdout&quot;         :   false,</span><br><span class=\"line\">   &quot;file_type&quot;          :   0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\">总结<a href=\"#总结\" title=\"总结\"></a></h1><p>bitwarden作为一款开源的密码管理器，其本身支持平台之多，功能之全面，是替代1Password的理想品。bitwarden安装简单，采用Docker镜像，特别适合已经有了VPS建站的朋友，在不影响建站的情况下正常使用bitwarden。</p>\n<p>bitwarden可以支持多用户注册使用，如果想要让bitwarden发送邮件的话，可以使用SMTP发邮件，参考代码如下：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">  -e SMTP_HOST&#x3D;&lt;smtp.domain.tld&gt; \\</span><br><span class=\"line\">  -e SMTP_FROM&#x3D;&lt;bitwarden@domain.tld&gt; \\</span><br><span class=\"line\">  -e SMTP_PORT&#x3D;587 \\</span><br><span class=\"line\">  -e SMTP_SSL&#x3D;true \\</span><br><span class=\"line\">  -e SMTP_USERNAME&#x3D;&lt;username&gt; \\</span><br><span class=\"line\">  -e SMTP_PASSWORD&#x3D;&lt;password&gt; \\</span><br><span class=\"line\">  -v &#x2F;bw-data&#x2F;:&#x2F;data&#x2F; \\</span><br><span class=\"line\">  -p 80:80 \\</span><br><span class=\"line\">  bitwardenrs&#x2F;server:latest</span><br></pre></td></tr></table></figure>\n\n<p>本文部分内容参考自：<a href=\"https://wzfou.com/bitwarden-rs/\" target=\"_blank\">wzfou</a> <a href=\"https://github.com/dani-garcia/bitwarden_rs/wiki/SMTP-configuration\" target=\"_blank\">bitwarden_rs Wiki</a>。 </p>\n","next":{"title":"B站批量删除抽奖动态脚本","link":"2020/03/12/bilibili-del-Luck-draw-dynamic"},"plink":"https://gwliang.com/2020/05/04/please-amend/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"bitwarden_rs安装教程","title":"bitwarden_rs安装教程","index":"2","children":[{"id":"安装前准备","title":"安装前准备","index":"2.1"},{"id":"安装docker","title":"安装Docker","index":"2.2"},{"id":"安装caddy","title":"安装Caddy","index":"2.3"},{"id":"bitwarden_rs安装","title":"bitwarden_rs安装","index":"2.4"}]},{"id":"bitwarden_rs配置方法","title":"bitwarden_rs配置方法","index":"3","children":[{"id":"启动bitwarden_rs","title":"启动bitwarden_rs","index":"3.1"},{"id":"设置caddynginx","title":"设置Caddy&#x2F;Nginx","index":"3.2"},{"id":"禁止注册","title":"禁止注册","index":"3.3"},{"id":"关闭、重启、升级","title":"关闭、重启、升级","index":"3.4"}]},{"id":"docker-compose配置","title":"Docker Compose配置","index":"4","children":[{"id":"运行服务","title":"运行服务","index":"4.1"}]},{"id":"bitwarden管理密码","title":"bitwarden管理密码","index":"5","children":[{"id":"网页版bitwarden","title":"网页版bitwarden","index":"5.1"},{"id":"浏览器bitwarden","title":"浏览器bitwarden","index":"5.2"}]},{"id":"bitwarden备份与恢复","title":"bitwarden备份与恢复","index":"6","children":[{"id":"手动备份","title":"手动备份","index":"6.1"},{"id":"自动备份","title":"自动备份","index":"6.2"},{"id":"恢复备份","title":"恢复备份","index":"6.3"},{"id":"七牛云备份","title":"七牛云备份","index":"6.4","children":[{"id":"给qshell授权","title":"给qshell授权","index":"6.4.1"}]},{"id":"配置好qshell的ak和sk","title":"配置好qshell的ak和sk","index":"6.5","children":[{"id":"填写qshell配置文件","title":"填写qshell配置文件","index":"6.5.1"}]}]},{"id":"总结","title":"总结","index":"7"}],"reward":true,"copyright":{"license":"自由转载-非商用-禁止演绎-保持署名(<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"Gaowan Liang","link":"<a href=\"https://gwliang.com/2020/05/04/please-amend/\" title=\"免费开源的bitwarden_rs自建密码管理系统-安装,使用和备份教程\">https://gwliang.com/2020/05/04/please-amend/</a>"}}